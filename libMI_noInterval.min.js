/* Author by Phan Chau Nam
   Created by Feb 2021
   Updated 29Apr2021
*/

function convertImg(e, t) {
    const n = e[0].files[0];
    var r = $("#respId").val();
    if (null != n) {
        e.closest(".ds-question").find(".q-answer .btnUpload").text("Đang upload...");
        var s = e.closest(".ds-question").attr("id"),
            
            o = new Image;
        o.onload = function(e) {
            var n = resizeImg(o, t);
            URL.revokeObjectURL(o.src), i.readAsArrayBuffer(n)
        }, o.src = URL.createObjectURL(n);
        const i = new FileReader;
        i.onload = function(e) {
            const t = {
                filename: r + "_" + s + ".jpg",
                mimeType: n.type,
                bytes: [...new Int8Array(e.target.result)],
                fileDir: s,
                folderName: r
            };
            google.script.run.withSuccessHandler(successUpload).withFailureHandler(failUpload).uploadFiles(t)
        }
    } else showError(e.closest(".ds-question"), "Chưa có hình")
}

function successUpload(e) {
    var t = $("#" + e.fileDir).closest(".ds-question");
    t.find(".answer").val(e.fileURL), t.find(".q-answer .btnUpload").toggleClass("upload-done", !0).text("Đổi hình"), hideInfo(), hideError(), showInfo(t, "Upload thành công!")
}

function failUpload(e) {
    var t = $("#" + e.fileDir).closest(".ds-question");
    t.find(".q-answer .btnUpload").text("Upload lại"), hideInfo(), hideError(), showError(t, "Upload thất bại!")
}

function makeid(e) {
    for (var t = "", n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", r = n.length, s = 0; s < e; s++) t += n.charAt(Math.floor(Math.random() * r));
    return t
}

function resizeImg(e, t) {
    var n = document.createElement("canvas"),
        r = e.width,
        s = e.height;
    return r > s ? r > t && (s *= t / r, r = t) : s > t && (r *= t / s, s = t), n.width = r, n.height = s, n.getContext("2d").drawImage(e, 0, 0, r, s), dataURItoBlob(n.toDataURL("image/jpeg"))
}

function dataURItoBlob(e) {
    if ("string" != typeof e) throw new Error("Invalid argument: dataURI must be a string");
    for (var t = (e = e.split(","))[0].split(":")[1].split(";")[0], n = atob(e[1]), r = n.length, s = new ArrayBuffer(r), a = new Uint8Array(s), o = 0; o < r; o++) a[o] = n.charCodeAt(o);
    return new Blob([a], {
        type: t
    })
}
$(function() {
    var e = makeid(10);
    $("#respId").val(e), $(".dsSingle .q-answer li").on("click", function() {
        $(this).closest(".ds-question").find(".q-true-answer .answer").val($(this).closest("ul").find("input[type=radio]:checked").closest("li").find(".answerLabel").text())
    }), $(".btnUpload").on("click", function() {
        hideInfo(), hideError(), callImageFunctions($(this).closest(".q-answer").find("input[type=file]"))
    }), $(".dsDropDown .q-answer select").on("change", function() {
        var e = $(this).find("option:selected").val();
        $(this).closest(".ds-question").find(".q-true-answer .answer").val(e)
    }), $(".dsPrev").on("click", function() {
        var e = $("#routing"),
            t = e.val().split(","),
            n = t.pop();
        e.val(t.join(",")), $("#currentPage").val(parseInt(n, 10)), showQuestion()
    })
});
